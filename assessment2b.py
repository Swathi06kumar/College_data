# -*- coding: utf-8 -*-
"""Assessment2B.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MaIuopZr3q1g6FXrNu5tmSwajyeARKcO

###### Assessment

###### I am going to provide two .csv files , you are supposed to work on them and have to provide solutions to the following problems

###### import necessary libraries
"""

import pandas as pd
import matplotlib.pyplot as plt

"""###### merge those two csv files (after getting as dataframes, get them as a single dataframe)"""

import pandas as pd
df1=pd.read_csv('college_1.csv')
df2=pd.read_csv('college_2.csv')
# merging two csv files
df = pd.concat(
    map(pd.read_csv, ['college_1.csv', 'college_2.csv']), ignore_index=True)
df

"""###### Take each csv file , split that csv file into multiple categories (example csv files are added in the repo)

###### consider if the codekata score exceeds 15000 points(present week) then make a csv on those observations as Exceeded expectations.csv
"""

a = df[df['CodeKata Score'] >=15000]

a.to_csv('Exceeded expectations.csv', index=False)
df1=pd.read_csv("Exceeded expectations.csv")
df1

"""###### if  10000<codekata score<15000   (Reached_expectations.csv)


"""

b1= df[df['CodeKata Score']>=10000]
b= b1[df['CodeKata Score']<15000]
b.to_csv('Reached_expectations.csv', index=False)
df2=pd.read_csv("Reached_expectations.csv")
df2

"""###### if  7000<codekata score<10000   (Needs_Improvement.csv)

"""

c1= df[df['CodeKata Score']>=7000]
c= c1[df['CodeKata Score']<10000]
c.to_csv('Needs_Improvement.csv', index=False)
df2=pd.read_csv("Needs_Improvement.csv")
df2

"""###### if  codekate score < 7000        (Unsatisfactory.csv)"""

d= df[df['CodeKata Score']<7000]
b.to_csv('Unsatisfactory.csv', index=False)
df2=pd.read_csv("Unsatisfactory.csv")
df2

"""###### Average of previous week geekions vs this week geekions (i.e Previous Geekions vs CodeKata Score)"""

cols=['Previous Geekions','CodeKata Score']
df[cols].mean(axis=1)

"""###### No of students participated """

df.shape[0]

"""###### #Average completion of python course or my_sql or python english or computational thinking"""

df['python'].mean()

df['mysql'].mean()

df['python_en'].mean()

df['computational_thinking'].mean()

"""###### rising star of the week (top 3 candidate who performed well in that particular week)"""

a = df.sort_values(by ='Rising', ascending = 0)
print(a.iloc[0:3,0])

"""###### Shining stars of the week (top 3 candidates who has highest geekions)"""

df1['shine']=df['Previous Geekions']+df['CodeKata Score']
b=df1.sort_values(by="shine",ascending=0)
print(b.iloc[0:3,0])

"""###### Department wise codekata performence (pie chart)"""

df.groupby('Department').size().plot(kind='pie', autopct='%.2f')

"""###### Department wise toppers (horizantal bar graph or any visual representations of your choice)"""

a=(df.groupby(['Department'])['CodeKata Score'].nlargest(3))

a

a.plot.barh(stacked=True,title="Toppers" )